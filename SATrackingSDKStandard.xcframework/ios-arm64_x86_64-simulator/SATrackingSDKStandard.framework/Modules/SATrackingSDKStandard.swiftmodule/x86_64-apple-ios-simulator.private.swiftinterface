// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SATrackingSDKStandard
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import SATrackingSDKStandard
import Swift
import _Concurrency
import _StringProcessing
public struct StopView : SATrackingSDKStandard.TrackerEvent, SATrackingSDKStandard.CustomParamsAware {
  public var id: Swift.String
  public var name: Swift.String
  public var category: Swift.String?
  public var subcategory: Swift.String?
  public var value: Swift.Double?
  public var page: Swift.String?
  public var customParams: [Swift.String : Swift.String]?
  public init(id: Swift.String, name: Swift.String, category: Swift.String? = nil, subcategory: Swift.String? = nil, value: Swift.Double? = nil, page: Swift.String? = nil, customParams: [Swift.String : Swift.String]? = nil)
}
public struct AdClick : SATrackingSDKStandard.TrackerEvent, SATrackingSDKStandard.CustomParamsAware {
  public var placementId: Swift.String?
  public var width: Swift.Int?
  public var height: Swift.Int?
  public var href: Swift.String?
  public var category: Swift.String?
  public var subcategory: Swift.String?
  public var page: Swift.String?
  public var customParams: [Swift.String : Swift.String]?
  public init(placementId: Swift.String? = nil, width: Swift.Int? = nil, height: Swift.Int? = nil, href: Swift.String? = nil, category: Swift.String? = nil, subcategory: Swift.String? = nil, page: Swift.String? = nil, customParams: [Swift.String : Swift.String]? = nil)
}
public struct AddToCartItem : SATrackingSDKStandard.CustomParamsAware {
  public var id: Swift.String
  public var name: Swift.String
  public var price: Swift.Double
  public var currency: Swift.String
  public var category: Swift.String?
  public var subcategory: Swift.String?
  public var deltaQuantity: Swift.Float
  public var quantity: Swift.Float
  public var customParams: [Swift.String : Swift.String]?
  public init(id: Swift.String, name: Swift.String, price: Swift.Double, currency: Swift.String, category: Swift.String? = nil, subcategory: Swift.String? = nil, deltaQuantity: Swift.Float, quantity: Swift.Float, customParams: [Swift.String : Swift.String]? = nil)
}
public protocol CustomParamsAware {
  var customParams: [Swift.String : Swift.String]? { get set }
}
public protocol TrackerEvent {
}
public struct AdImp : SATrackingSDKStandard.TrackerEvent, SATrackingSDKStandard.CustomParamsAware {
  public var placementId: Swift.String?
  public var width: Swift.Int?
  public var height: Swift.Int?
  public var href: Swift.String?
  public var category: Swift.String?
  public var subcategory: Swift.String?
  public var page: Swift.String?
  public var customParams: [Swift.String : Swift.String]?
  public init(placementId: Swift.String? = nil, width: Swift.Int? = nil, height: Swift.Int? = nil, href: Swift.String? = nil, category: Swift.String? = nil, subcategory: Swift.String? = nil, page: Swift.String? = nil, customParams: [Swift.String : Swift.String]? = nil)
}
public struct AddToCart : SATrackingSDKStandard.TrackerEvent {
  public var page: Swift.String?
  public var items: [SATrackingSDKStandard.AddToCartItem]
  public init(page: Swift.String? = nil, items: [SATrackingSDKStandard.AddToCartItem] = [])
}
public enum ApiError : Swift.Error, Swift.CustomStringConvertible, Foundation.LocalizedError {
  case invocationFailed(reason: (message: Swift.String, statusCode: Swift.Int))
  public var description: Swift.String {
    get
  }
  public var errorDescription: Swift.String? {
    get
  }
}
public struct StartView : SATrackingSDKStandard.TrackerEvent, SATrackingSDKStandard.CustomParamsAware {
  public var id: Swift.String
  public var name: Swift.String
  public var category: Swift.String?
  public var subcategory: Swift.String?
  public var page: Swift.String?
  public var customParams: [Swift.String : Swift.String]?
  public init(id: Swift.String, name: Swift.String, category: Swift.String? = nil, subcategory: Swift.String? = nil, page: Swift.String? = nil, customParams: [Swift.String : Swift.String]? = nil)
}
extension Swift.String : Foundation.LocalizedError {
  public var errorDescription: Swift.String? {
    get
  }
}
public struct TrackerOptions {
  public let partnerId: Swift.String
  public let uid: Swift.String
  public let endpointUrl: Swift.String
  public let debugMode: Swift.Bool
  public let httpHeaders: [Swift.String : Swift.String]
  public init(partnerId: Swift.String, uid: Swift.String, endpointUrl: Swift.String, debugMode: Swift.Bool = false, httpHeaders: [Swift.String : Swift.String] = [:])
}
@_hasMissingDesignatedInitializers public class TechTracker {
  public static let shared: SATrackingSDKStandard.TechTracker
  public static func initialize(options: SATrackingSDKStandard.TrackerOptions)
  public func event(path: Swift.String = "", event: any SATrackingSDKStandard.TrackerEvent, block: @escaping ((any Swift.Error)?) -> Swift.Void = { _ in })
  @objc deinit
}
public struct Purchase : SATrackingSDKStandard.TrackerEvent {
  public var page: Swift.String?
  public var items: [SATrackingSDKStandard.PurchaseItem]
  public init(page: Swift.String? = nil, items: [SATrackingSDKStandard.PurchaseItem] = [])
}
public struct Scroll : SATrackingSDKStandard.TrackerEvent, SATrackingSDKStandard.CustomParamsAware {
  public var category: Swift.String?
  public var subcategory: Swift.String?
  public var value: Swift.Double?
  public var page: Swift.String?
  public var customParams: [Swift.String : Swift.String]?
  public init(category: Swift.String? = nil, subcategory: Swift.String? = nil, value: Swift.Double? = nil, page: Swift.String? = nil, customParams: [Swift.String : Swift.String]? = nil)
}
public struct Click : SATrackingSDKStandard.TrackerEvent, SATrackingSDKStandard.CustomParamsAware {
  public var value: Swift.String?
  public var page: Swift.String?
  public var customParams: [Swift.String : Swift.String]?
  public init(value: Swift.String? = nil, page: Swift.String? = nil, customParams: [Swift.String : Swift.String]? = nil)
}
public struct PurchaseItem : SATrackingSDKStandard.CustomParamsAware {
  public var id: Swift.String
  public var name: Swift.String
  public var price: Swift.Double
  public var currency: Swift.String
  public var category: Swift.String?
  public var subcategory: Swift.String?
  public var quantity: Swift.Float
  public var customParams: [Swift.String : Swift.String]?
  public init(id: Swift.String, name: Swift.String, price: Swift.Double, currency: Swift.String, category: Swift.String? = nil, subcategory: Swift.String? = nil, quantity: Swift.Float, customParams: [Swift.String : Swift.String]? = nil)
}
public struct Search : SATrackingSDKStandard.TrackerEvent, SATrackingSDKStandard.CustomParamsAware {
  public var value: Swift.String?
  public var page: Swift.String?
  public var customParams: [Swift.String : Swift.String]?
  public init(value: Swift.String? = nil, page: Swift.String? = nil, customParams: [Swift.String : Swift.String]? = nil)
}
public struct Viewing : SATrackingSDKStandard.TrackerEvent, SATrackingSDKStandard.CustomParamsAware {
  public var id: Swift.String
  public var name: Swift.String
  public var category: Swift.String?
  public var subcategory: Swift.String?
  public var value: Swift.Double?
  public var page: Swift.String?
  public var customParams: [Swift.String : Swift.String]?
  public init(id: Swift.String, name: Swift.String, category: Swift.String? = nil, subcategory: Swift.String? = nil, value: Swift.Double? = nil, page: Swift.String? = nil, customParams: [Swift.String : Swift.String]? = nil)
}
